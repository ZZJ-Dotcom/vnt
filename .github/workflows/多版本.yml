name: 编译vnt-cli多版本

on:
  schedule:
    - cron: '0 3,20 * * *'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  TZ: Asia/Shanghai
  
jobs:
 check:
  runs-on: ubuntu-latest
  outputs:
    ver: ${{ steps.getversion.outputs.ver }}
    cver: ${{ steps.getversion.outputs.cver }}
  steps:
  - name: 检查更新
    id: getversion
    run: |
      ver=`curl https://api.github.com/repos/lbl8603/vnt/releases/latest | jq -r '.tag_name'`
      cver=`curl https://api.github.com/repos/lmq8267/vnt/releases/latest | jq -r '.tag_name'`
      echo "ver=${ver}" >> $GITHUB_OUTPUT
      echo "cver=${cver}" >> $GITHUB_OUTPUT
 build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.ver != needs.check.outputs.cver }}
    steps:
      - uses: actions/checkout@v3
      - name: 初始化环境
        uses: snickerbockers/submodules-init@v4
      - name: 配置并编译
        run: |
          mkdir -p ./musl_gcc 
          mkdir -p /opt/mipsel
          mkdir -p /opt/ds213j
          sudo timedatectl set-timezone "Asia/Shanghai"
          wget -q -c https://musl.cc/mipsel-linux-musl-cross.tgz -P ./musl_gcc/
          tar zxf ./musl_gcc/mipsel-linux-musl-cross.tgz -C ./musl_gcc/
          sudo ln -s $(pwd)/musl_gcc/mipsel-linux-musl-cross/bin/*gcc /usr/bin/
          wget -q -c https://github.com/lmq8267/vnt/releases/download/1.2.1/armada370-gcc493_glibc220_hard-GPL.txz -P /opt/musl_gcc/
          tar -Jxf /opt/musl_gcc/armada370-gcc493_glibc220_hard-GPL.txz -C /opt/musl_gcc/
          rustup install 1.72.1
          rustup default 1.72.1
          rustup target add mipsel-unknown-linux-musl
          rustup target add armv7-unknown-linux-gnueabihf
          cat >>~/.cargo/config <<EOF
          [target.mipsel-unknown-linux-musl]
          linker = "mipsel-linux-musl-gcc"
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]

          [target.armv7-unknown-linux-gnueabihf]
          linker = "/opt/musl_gcc/arm-unknown-linux-gnueabi/bin/arm-unknown-linux-gnueabi-gcc"
          #rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]  #编译静态选项 默认编译动态版
          EOF
          git clone https://github.com/lbl8603/vnt -b ${{ needs.check.outputs.ver }} /opt/vnt
          cd /opt/vnt
          cargo build --package vnt-cli --release --target=mipsel-unknown-linux-musl --no-default-features  --features ip_proxy,port_mapping
          cp -rf /opt/vnt/target/mipsel-unknown-linux-musl/release/vnt-cli /opt/mipsel/vnt-cli_lite
          cargo clean
          #cargo build --package vnt-cli --release --target=mipsel-unknown-linux-musl --no-default-features --features openssl-vendored,aes_ecb,server_encrypt,aes_gcm,ip_proxy,port_mapping
          #cp -rf /opt/vnt/target/mipsel-unknown-linux-musl/release/vnt-cli /opt/mipsel/vnt-cli_openssl
          #cargo clean
          cargo build --package vnt-cli --release --target=mipsel-unknown-linux-musl --features default
          cp -rf /opt/vnt/target/mipsel-unknown-linux-musl/release/vnt-cli /opt/mipsel/vnt-cli_default
          cargo clean
          cargo build --package vnt-cli --release --target=mipsel-unknown-linux-musl --features openssl-vendored,ring-cipher
          cp -rf /opt/vnt/target/mipsel-unknown-linux-musl/release/vnt-cli /opt/mipsel/vnt-cli_full
          cargo clean
          #编译群晖ds213j版
          export PATH=$PATH:/opt/musl_gcc/arm-unknown-linux-gnueabi/bin
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/musl_gcc/arm-unknown-linux-gnueabi/lib
          cargo build --package vnt-cli --target=armv7-unknown-linux-gnueabihf --release --features openssl-vendored
          cp -rf /opt/vnt/target/armv7-unknown-linux-gnueabihf/release/vnt-cli /opt/ds213j/vnt-cli_ds213j
      - name: 压缩
        run: |
          git clone https://github.com/lmq8267/cloudflared.git /opt/st
          tar -xvf /opt/st/upx-3.95-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-3.95-amd64_linux/upx
          chmod 777 /opt/st/strip
          cd /opt/mipsel
          du -ha
          /opt/st/strip /opt/mipsel/vnt-cli_lite
          #/opt/st/strip /opt/mipsel/vnt-cli_openssl
          /opt/st/strip /opt/mipsel/vnt-cli_default
          /opt/st/strip /opt/mipsel/vnt-cli_full
          du -ha
          /opt/upx-3.95-amd64_linux/upx --lzma --best /opt/mipsel/vnt-cli_lite
          #/opt/upx-3.95-amd64_linux/upx --lzma --best /opt/mipsel/vnt-cli_openssl
          /opt/upx-3.95-amd64_linux/upx --lzma --best /opt/mipsel/vnt-cli_default
          /opt/upx-3.95-amd64_linux/upx --lzma --best /opt/mipsel/vnt-cli_full
          du -ha
          #echo $(md5sum /opt/mipsel/vnt-cli_${NAME} | awk '{print $1;}') >${NAME}_MD5.txt
          echo "build_time=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
      - name : 上传
        uses: actions/upload-artifact@master
        if: always()
        with:
         name: vnt-cli_ds213j
         path: /opt/ds213j/vnt-cli_ds213j
      - name: 发布
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.c8 }}
          body: |
           > ### 编译时间 ：${{ env.build_time }}

           ### **各版本区别：**
           
           - **lite**    ：不集成任何加密
           - **default** ：排除openssl 只使用默认加密 
           - **full**    ：集成所有加密方式

           - **ds213j**  ：群晖ds213j的
           
           如果不加密（参数-w），集不集成加密模块都不影响使用，若加密则所有客户端都应使用相同的加密方式
           [详细加密方式介绍](https://github.com/lbl8603/vnt#%E7%BC%96%E8%AF%91)、[官方更新说明](https://github.com/lbl8603/vnt/releases)

           [其他平台压缩版](https://github.com/lmq8267/vnt-cli/releases)
          tag_name: ${{ needs.check.outputs.ver }}
          files: |
              /opt/mipsel/*
              /opt/ds213j/vnt-cli_ds213j
      -       
       name: 删除工作流
       uses: GitRML/delete-workflow-runs@main
       with:
        token: ${{ secrets.c8 }}
        retain_days: 2
        keep_minimum_runs: 0
